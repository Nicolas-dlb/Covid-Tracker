{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/morty/covid/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState(['USA', 'UK', 'INDIA']);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uxLl/CIUQgWMtyweF3EKqZGaLN4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/morty/covid/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","getCountriesData","fetch","then","response","json","data","map","name","value","iso2","onCountryChange","event","countryCode","target","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\n\nfunction App() {\n const [countries, setCountries] = useState(['USA', 'UK', 'INDIA' ]);\n const [country, setCountry] = useState('worldwide');\n const [countryInfo, setCountryInfo] = useState({});\n useEffect(() => {\n   const getCountriesData = async () => {\n     await fetch(\"https://disease.sh/v3/covid-19/countries\")\n       .then(response => response.json())\n         .then(data => {\n           const countries = data.map(country => ({\n             name: country.country,\n             value: country.countryInfo.iso2\n           }));\n           setCountries(countries);\n         });\n   };\n   getCountriesData();\n }, []);\n\n const onCountryChange = async (event) => {\n   const countryCode = event.target.value;\n   setCountry(countryCode);\n\n   const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n   await fetch(url)\n     .then(response => response.json())\n       .then(data => {\n         setCountry(countryCode);\n         setCountryInfo(data);\n       })\n }\n \n return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n          <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {countries.map(country => ( <MenuItem value={country.value}>{country.name}</MenuItem> ))}\n          </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}/>\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n        </div>\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n         <h3>Live cases by country</h3>\n         <h3>Worldwide new cases</h3>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}