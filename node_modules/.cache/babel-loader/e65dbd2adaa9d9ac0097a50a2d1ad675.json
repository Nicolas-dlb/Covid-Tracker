{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/morty/covid/src/util.js\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 300\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 600\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 1500\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = (data, casesType = 'cases') => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-name\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-confirmed\",\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 7\n}, this));","map":{"version":3,"sources":["/home/morty/covid/src/util.js"],"names":["Circle","Popup","React","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,UAAU,EAAE;AAFP,GADa;AAKpBC,EAAAA,SAAS,EAAE;AACTF,IAAAA,GAAG,EAAE,SADI;AAETC,IAAAA,UAAU,EAAE;AAFH,GALS;AASpBE,EAAAA,MAAM,EAAE;AACNH,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,UAAU,EAAE;AAFN;AATY,CAAxB;AAgBA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAC9B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AAED,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACT,KAAF,GAAUU,CAAC,CAACV,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAApD,CAAP;AACF,CAJM;AAMP,OAAO,MAAMW,eAAe,GAAIC,IAAD,IAC7BA,IAAI,GAAI,IAAGd,OAAO,CAACc,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAA6B,EAApC,GAAwC,IADvC;AAGP,OAAO,MAAMC,aAAa,GAAG,CAACR,IAAD,EAAOS,SAAS,GAAC,OAAjB,KACzBT,IAAI,CAACU,GAAL,CAASC,OAAO,iBACd,QAAC,MAAD;AACA,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADR;AAEA,EAAA,WAAW,EAAE,GAFb;AAGA,EAAA,KAAK,EAAErB,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAHlC;AAIA,EAAA,SAAS,EAAEF,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAJtC;AAKA,EAAA,MAAM,EACFoB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgChB,eAAe,CAACgB,SAAD,CAAf,CAA2Bb,UAN/D;AAAA,yBASE,QAAC,KAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEqB,UAAAA,eAAe,EAAG,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4BP,OAAO,CAACA;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,8BAAwCnB,OAAO,CAACmB,OAAO,CAACjB,KAAT,CAAP,CAAuBa,MAAvB,CAA8B,KAA9B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kCAA4Cf,OAAO,CAACmB,OAAO,CAACd,SAAT,CAAP,CAA2BU,MAA3B,CAAkC,KAAlC,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BAAsCf,OAAO,CAACmB,OAAO,CAACb,MAAT,CAAP,CAAwBS,MAAxB,CAA+B,KAA/B,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,QADF,CADG","sourcesContent":["import { Circle, Popup } from \"react-leaflet\";\nimport React from \"react\";\nimport numeral from \"numeral\";\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n      multiplier: 300,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      multiplier: 600,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n      multiplier: 1500,\n    },\n  };\n\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n\n   return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType='cases') => (\n    data.map(country => (\n      <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.4}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      radius={\n          Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n      >\n        <Popup>\n            <div className=\"info-container\">\n                <div className=\"info-flag\" style={{ backgroundImage: `url(${country.countryInfo.flag})`}} ></div>\n                <div className=\"info-name\">{country.country}</div>\n                <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n                <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n                <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n            </div>\n        </Popup>\n      </Circle>\n    ))\n)"]},"metadata":{},"sourceType":"module"}