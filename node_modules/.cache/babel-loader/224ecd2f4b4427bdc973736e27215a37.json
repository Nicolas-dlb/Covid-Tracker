{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/morty/covid/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nconst buildChartData = (data, casesType = 'cases') => {\n  const chartData = [];\n  let lastDataPoint;\n\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      const newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n\n    lastDataPoint = data[casesType][date];\n  }\n\n  return chartData;\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"wpgUsBY956btMcg33+x8PhIaewY=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/home/morty/covid/src/LineGraph.js"],"names":["React","useEffect","useState","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","setData","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n  };\n\n  const buildChartData = (data, casesType='cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases) {\n        if (lastDataPoint) {\n        const newDataPoint = {\n            x: date,\n            y: data[casesType][date] - lastDataPoint\n        }\n     chartData.push(newDataPoint)\n     }  \n     lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n};\n\nfunction LineGraph() {\n   const [data,setData] = useState({});\n  \n  \n   useEffect(() => {\n     fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n       .then(response => response.json())\n         .then(data => {\n         const chartData = buildChartData(data);\n         setData(chartData);\n         })\n   }, []);\n\n    return (\n        <div>\n           <Line \n           data={{\n               datasets: [{\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n               }]\n             }} \n           options={options} />\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}