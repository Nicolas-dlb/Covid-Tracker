{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/morty/covid/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState(['USA', 'UK', 'INDIA']);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"cases\",\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Coronavirus Cases\",\n          cases: prettyPrintStat(countryInfo.todayCases),\n          total: prettyPrintStat(countryInfo.cases)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"recovered\",\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered\",\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          total: prettyPrintStat(countryInfo.recovered)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"deaths\",\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\",\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          total: prettyPrintStat(countryInfo.deaths)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        casesType: casesType,\n        countries: mapCountries,\n        center: mapCenter,\n        zoom: mapZoom,\n        casesType: casesType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live cases by country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"app__graphTitle\",\n          children: [\"Worldwide new \", casesType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          className: \"app__graph\",\n          casesType: casesType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PmPzinTV369Iu4robUwVBuKNw5c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/morty/covid/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData, prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n const [countries, setCountries] = useState(['USA', 'UK', 'INDIA' ]);\n const [country, setCountry] = useState('worldwide');\n const [countryInfo, setCountryInfo] = useState({});\n const [tableData, setTableData] = useState([]);\n const [casesType, setCasesType] = useState(\"cases\");\n const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n const [mapZoom, setMapZoom] = useState(3);\n const [mapCountries, setMapCountries] = useState([]);\n \n useEffect(() => {\n   fetch(\"https://disease.sh/v3/covid-19/all\")\n     .then(response => response.json())\n       .then(data => {\n         setCountryInfo(data);\n       });\n }, []);\n \n useEffect(() => {\n   const getCountriesData = async () => {\n     await fetch(\"https://disease.sh/v3/covid-19/countries\")\n       .then(response => response.json())\n         .then(data => {\n           const countries = data.map(country => ({\n             name: country.country,\n             value: country.countryInfo.iso2\n           }));\n           const sortedData = sortData(data);\n           setTableData(sortedData);\n           setMapCountries(data);\n           setCountries(countries);\n         });\n   };\n   getCountriesData();\n }, []);\n\n const onCountryChange = async (event) => {\n   const countryCode = event.target.value;\n   setCountry(countryCode);\n\n   const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n   await fetch(url)\n     .then(response => response.json())\n       .then(data => {\n         setCountry(countryCode);\n         setCountryInfo(data);\n\n         setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n         setMapZoom(4);\n       })\n }\n \n return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n          <Select value={country} onChange={onCountryChange}>\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {countries.map(country => ( <MenuItem value={country.value}>{country.name}</MenuItem> ))}\n          </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox \n          isRed\n          active={casesType === \"cases\"} \n          onClick={e => setCasesType(\"cases\")} \n          title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} \n          total={prettyPrintStat(countryInfo.cases)}\n          />\n          <InfoBox \n          active={casesType === \"recovered\"} \n          onClick={e => setCasesType(\"recovered\")} \n          title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} \n          total={prettyPrintStat(countryInfo.recovered)}\n          />\n          <InfoBox \n          isRed\n          active={casesType === \"deaths\"} \n          onClick={e => setCasesType(\"deaths\")} \n          title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} \n          total={prettyPrintStat(countryInfo.deaths)}\n          />\n        </div>\n        <Map casesType={casesType} countries={mapCountries} center={mapCenter} zoom={mapZoom} casesType={casesType}/>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n         <h3>Live cases by country</h3>\n         <Table countries={tableData}/>\n         <h3 className='app__graphTitle'>Worldwide new {casesType}</h3>\n         <LineGraph className=\"app__graph\" casesType={casesType}/>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}